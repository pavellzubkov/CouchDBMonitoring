version: '3.7'
volumes:
    prometheus_data: {}
    grafana_data: {}
# networks:
    # monitor-net:
        # driver: overlay
        # name: inbound
    # traefik:
        # driver: overlay
        # name: traefik
    # couchdb-cluster:
        # driver: overlay
        # name: couchdbs
services:
    # couchdb1:
        # image: couchdb:2.3.1
        # command: '-name couchdb@couchdb1 -setcookie thecookie'
        # networks:
            # couchdb-cluster: null
            # monitor-net: null
        # ports:
            # - '5984:5984'
    couchdbstats1:
        image: gesellix/couchdb-prometheus-exporter:latest
        command: '--couchdb.uri=http://192.168.1.17:5984 --logtostderr --databases=_all_dbs'
        environment:
            - 'COUCHDB.USERNAME=${COUCHDB_USER:-ladmin}'
            - 'COUCHDB.PASSWORD=${COUCHDB_PASSWORD:-Local0513}'
        # networks:
            # couchdb-cluster: null
            # monitor-net: null
        ports:
            - '9984:9984'
        # deploy:
            # mode: global
            # update_config: {parallelism: 1, delay: 10s}
            # restart_policy: {condition: on-failure}
    prometheus:
        image: prom/prometheus
        volumes:
            - './prometheus/:/etc/prometheus/'
            - 'prometheus_data:/prometheus'
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
        # networks:
            # - monitor-net
            
    alertmanager:
        image: prom/alertmanager
        ports:
            - 9093:9093
        volumes:
            - "./alertmanager/:/etc/alertmanager/"
        # networks:
            # - monitor-net
        command:
            - '--config.file=/etc/alertmanager/config.yml'
            - '--storage.path=/alertmanager'
        # deploy:
            # placement:
            # constraints:
                # - node.role==manager
        # restart_policy:
        # condition: on-failure
            
    grafana:
        image: grafana/grafana
        depends_on:
        - prometheus
        volumes:
            - grafana_data:/var/lib/grafana
            - ./grafana/provisioning/:/etc/grafana/provisioning/
        env_file:
            - grafana/config.monitoring    
        user: "104"  
        ports:
            - "3000:3000"        
        labels:
            - "traefik.http.routers.grafana.rule=Host(`grafana.localhost`)"
            - "traefik.http.services.grafana.loadbalancer.server.port=3000"
            - "traefik.docker.network=traefik"
        # restart_policy:
            # condition: on-failure
